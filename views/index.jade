extend layout

block stylesheets
    include includes/draw2d_css
    link(rel="stylesheet" href="/stylesheets/style.css")
    link(rel="stylesheet" href="/stylesheets/bootstrap.css")
    link(rel="stylesheet" href="/stylesheets/visual-editor.css")
    link(rel="stylesheet" href="/stylesheets/toolbar-editor.css")


block content
    h1
    div.container-fluid
        div.row
            div.col-md-6.col-md-offset-2
                p.title-bar ClickP4: Towards Modular Programming of P4
            div.col-md-2
                p.name-bar Yu Zhou,  Jun Bi
                p.affliation-bar Tsinghua University
    hr(style=" height:1px; border:none; border-top:2px dotted #185598;")

    // div#layout.container-fluid
        ul.nav.nav-tabs
            li.active
                a(href='#Switch', data-toggle='tab').panel-bar Network Features
        .tab-content
            #Switch.tab-pane.fade.in.active
                include includes/switch_workspace.jade
    .workspace.active
        div.container-fluid
            div.row
                div.col-md-8.divbox.manipulate-box
                    p.section-title Dashboard
                    div.row.predicate-toolbar
                        div.col-md-2
                            p.subsection-title.match-title Match Fields
                        div.col-md-9.inputbox
                            div.row
                                div.col-md-1
                                    label.label-text L3DST
                                div.col-md-3
                                    input(tyepe='text')#L3Dst.form-control
                                div.col-md-1
                                    label.label-text L4DST
                                div.col-md-3
                                    input(tyepe='text')#L4Dst.form-control
                                div.col-md-1
                                    label.label-text Proto
                                div.col-md-3
                                    select.form-control#ProtoSelector
                                        option TCP
                                        option UDP
                                div.col-md-1
                                    label.label-text L3SRC
                                div.col-md-3
                                    input(tyepe='text')#L3Src.form-control
                                div.col-md-1
                                    label.label-text L4SRC
                                div.col-md-3
                                    input(tyepe='text')#L4Src.form-control
                                div.col-md-1
                                    label.label-text Device
                                div.col-md-3
                                    select.form-control#DeviceSelector
                                        option S1
                                        option S2
                                        option S3
                                        option S4
                                        option S5
                        div.col-md-1
                            button#CompileButton.btn.btn-danger.btn-lg.compile-btn Compile
                    div.row


                        #navigation.palette
                            //- input#filter(type='text', placeholder='Filter...', autofocus='')
                            div#paletteElementScroll.list-group.nfbox
                                h1
                                p.subsection-title Network Features
                                div.palette_node_element.draw2d_droppable.list-group-item(data-shape="clickp4_l2_sw") L2_SW
                                span.badge#clickp4_l2_sw
                                div.palette_node_element.draw2d_droppable.list-group-item(data-shape="clickp4_nat") NAT
                                span.badge#clickp4_nat
                                div.palette_node_element.draw2d_droppable.list-group-item(data-shape="clickp4_vlan") VLAN
                                span.badge#clickp4_vlan
                                div.palette_node_element.draw2d_droppable.list-group-item(data-shape="clickp4_l3_sw") L3_SW
                                span.badge#clickp4_l3_sw
                                div.palette_node_element.draw2d_droppable.list-group-item(data-shape="clickp4_acl") ACL
                                span.badge#clickp4_acl
                                div.palette_node_element.draw2d_droppable.list-group-item(data-shape="clickp4_qos") QoS
                                span.badge#clickp4_qos
                            #paletteElementsOverlay

                        #draw2dCanvasWrapper.content
                            #draw2dCanvas.canvas(oncontextmenu='return false;')

                div.col-md-4
                    div.divbox.topology-box
                        p.section-title Topology
                        div
                            canvas(width=605 height=200 id='Canvas').canvas-bdg

                    div.divbox.policy-box
                        p.section-title Policies
                        div#PolicyPanel.policy-panel





#json

block addscript
    include includes/draw2d_js
    include includes/myshape_js
    script(src="/javascripts/draw2d/Application.js")
    script(src="/javascripts/draw2d/Palette.js")
    script(src="/javascripts/draw2d/ConnectionSelectionFeedbackPolicy.js")
    script(src="/javascripts/draw2d/DropInterceptorPolicy.js")
    script(src="/javascripts/draw2d/ConnectionRouter.js")
    script(src="/javascripts/draw2d/View.js")
    script(src="/javascripts/draw2d/Toolbar.js")
    script(src="/javascripts/draw2d/EditEditPolicy.js")
    script(src="/javascripts/jtopo-0.4.8-min.js")
    //- add a script for button function
    script(src="/javascripts/function_button.js")

    script.
        var showJSON = false;
        $(window).load( function(){
            app = new app.Application();

            if (showJSON === true) {
                displayJSON(app.view);

                // add an event listener to the Canvas for change notifications.
                // We just dump the current canvas document into the DIV
                //
                app.view.getCommandStack().addEventListener(
                function(e){
                    if(e.isPostChangeEvent()){
                        displayJSON(app.view);
                    }
                });
            }
            displayPolicies();
            setInterval("displayPolicies()",2000);
        });

        function displayPolicies() {
            $("#PolicyPanel").empty();
            var table = $("<table class='table table-hover table-bordered table-striped'></table>")
            var tr = $("<tr></tr>")
            tr.append("<th>" + "ID" + "</th>")
            tr.append("<th>" + "Match Fields" + "</th>")
            tr.append("<th>" + "Policies" + "</th>")
            table.append(tr)

            $.get("policies",function (result) {
                console.log(result.split("*"));
                var policies = result.split("*");
                for (var i = 1; i < policies.length; i++) {
                    var policy = policies[i].split("|")[0];
                    policy = policy.split('+')
                    tr = $("<tr></tr>");
                    tr.append("<td>"+ i +"</td>")
                    tr.append("<td>" +  "  L3DST=" + policy[0] +
                                        ",  L3SRC=" + policy[1] +
                                        ",  Protocol=" + policy[2] +
                                        ",  L4DST=" + policy[3] +
                                        ",  L4DST=" + policy[4] +
                                        ",  Device=" + policy[5] +
                              "</td>");
                    policy = policies[i].split("|")[1];
                    policy = policy.split("+");
                    console.log(policy)
                    var p = policy[0];
                    for (var j = 1; j < policy.length; j ++) {
                        p  = p + " => " + policy[j]
                    }
                    tr.append("<td>" + p + "</td>")
                    table.append(tr)
                }
            })
            $("#PolicyPanel").append(table);
        }
        
        function displayJSON(canvas){
        var writer = new draw2d.io.json.Writer();
        writer.marshal(canvas, function(json){
            $("#json").html("<pre>"+JSON.stringify(json,null,2)+"<pre>");
        });
        }
        $(document).ready(function () {
            var canvas = document.getElementById('Canvas');
            var stage = new JTopo.Stage(canvas);
            var scene = new JTopo.Scene(stage);

            var s1 = new JTopo.Node("S1");
            var s2 = new JTopo.Node("S2");
            var s3 = new JTopo.Node("S3");
            var s4 = new JTopo.Node("S4");
            var s5 = new JTopo.Node("S5");
            var h1 = new JTopo.Node("H1");
            var h2 = new JTopo.Node("H2");

            s1.setImage('/images/switch.png', false);
            s2.setImage('/images/switch.png', false);
            s3.setImage('/images/switch.png', false);
            s4.setImage('/images/switch.png', false);
            s5.setImage('/images/switch.png', false);
            h1.setImage('/images/host.png', false);
            h2.setImage('/images/host.png', false);

            s1.font = "20px Consolas";
            s1.fontColor = "0,0,0"
            s2.font = "20px Consolas";
            s2.fontColor = "0,0,0"
            s3.font = "20px Consolas";
            s3.fontColor = "0,0,0"
            s4.font = "20px Consolas";
            s4.fontColor = "0,0,0"
            s5.font = "20px Consolas";
            s5.fontColor = "0,0,0"
            h1.font = "20px Consolas";
            h1.fontColor = "0,0,0"
            h2.font = "20px Consolas";
            h2.fontColor = "0,0,0"


            s1.setLocation(100, 125);
            s2.setLocation(200, 125);
            s3.setLocation(300, 125);
            s4.setLocation(300, 50);
            s5.setLocation(400, 125);
            h2.setLocation(525, 125);
            h1.setLocation(25, 125);

            scene.add(s1);
            scene.add(s2);
            scene.add(s3);
            scene.add(s4);
            scene.add(s5);
            scene.add(h1);
            scene.add(h2);

            linkNode(s1, h1);
            linkNode(s1, s2);
            linkNode(s2, s3);
            linkNode(s2, s4);
            linkNode(s3, s4);
            linkNode(s3, s5);
            linkNode(s4, s5);
            linkNode(s5, h2);

            function linkNode(a, b) {
                var link = new JTopo.Link(a, b)
                link.lineWidth = 3;
                link.strokeColor = '0,0,0';
                scene.add(link);
                link.textOffsetY = 3;
                return link;
            }

            setInterval(function () {
                $.get("s1", function (result) {
                    s1.alarm = result;
                })
                $.get("s2", function (result) {
                    s2.alarm = result;
                })
                $.get("s3", function (result) {
                    s3.alarm = result;
                })
                $.get("s4", function (result) {
                    s4.alarm = result;
                })
                $.get("s5", function (result) {
                    s5.alarm = result;
                })
            }, 2000);

        });