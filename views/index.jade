extend layout

block stylesheets
    include includes/draw2d_css
    link(rel="stylesheet" href="/stylesheets/style.css")
    link(rel="stylesheet" href="/stylesheets/bootstrap.css")
    link(rel="stylesheet" href="/stylesheets/visual-editor.css")
    link(rel="stylesheet" href="/stylesheets/toolbar-editor.css")


block content
    h1
    div.container-fluid
        div.row
            div.col-md-6.col-md-offset-2
                p.title-bar ClickP4: Towards Modular Programming of P4
            div.col-md-2
                p.name-bar Yu Zhou,  Jun Bi
                p.affliation-bar Tsinghua University

    div#layout.container-fluid
        div.row
            div.col-md-1

            div.col-md-10
                hr
                ul.nav.nav-tabs
                    li.active
                        a(href='#Switch', data-toggle='tab').panel-bar Network Features
                    li
                        a(href='#Info', data-toggle='tab').panel-bar Topology
                    li
                        a(href='#Policies', data-toggle='tab').panel-bar Policies
                .tab-content
                    #Switch.tab-pane.fade.in.active
                        include includes/switch_workspace.jade
                    #Info.tab-pane.fade
                        include includes/info_workspace.jade
                    #Policies.tab-pane.fade
                        include includes/policies_workspace.jade
            div.col-md-1

#json

block addscript
    include includes/draw2d_js
    include includes/myshape_js
    script(src="/javascripts/draw2d/Application.js")
    script(src="/javascripts/draw2d/Palette.js")
    script(src="/javascripts/draw2d/ConnectionSelectionFeedbackPolicy.js")
    script(src="/javascripts/draw2d/DropInterceptorPolicy.js")
    script(src="/javascripts/draw2d/ConnectionRouter.js")
    script(src="/javascripts/draw2d/View.js")
    script(src="/javascripts/draw2d/Toolbar.js")
    script(src="/javascripts/draw2d/EditEditPolicy.js")
    script(src="/javascripts/jtopo-0.4.8-min.js")
    //- add a script for button function
    script(src="/javascripts/function_button.js")

    script.
        var showJSON = false;
        $(window).load( function(){
            app = new app.Application();

            if (showJSON === true) {
                displayJSON(app.view);

                // add an event listener to the Canvas for change notifications.
                // We just dump the current canvas document into the DIV
                //
                app.view.getCommandStack().addEventListener(
                function(e){
                    if(e.isPostChangeEvent()){
                        displayJSON(app.view);
                    }
                });
            }
            displayPolicies();
            setInterval("displayPolicies()",2000);
        });

        function displayPolicies() {
            $("#PolicyPanel").empty();
            var table = $("<table class='table table-hover'></table>")
            var tr = $("<tr></tr>")
            tr.append("<th>" + "ID" + "</th>")
            tr.append("<th>" + "Predicates" + "</th>")
            tr.append("<th>" + "Policies" + "</th>")
            table.append(tr)

            $.get("policies",function (result) {
                console.log(result.split("*"));
                var policies = result.split("*");
                for (var i = 1; i < policies.length; i++) {
                    var policy = policies[i].split("|")[0];
                    policy = policy.split('+')
                    tr = $("<tr></tr>");
                    tr.append("<td>"+ i +"</td>")
                    tr.append("<td>" +  "  L3DST=" + policy[0] +
                                        ",  L3SRC=" + policy[1] +
                                        ",  Protocol=" + policy[2] +
                                        ",  L4DST=" + policy[3] +
                                        ",  L4DST=" + policy[4] +
                                        ",  Device=" + policy[5] +
                              "</td>");
                    policy = policies[i].split("|")[1];
                    policy = policy.split("+");
                    console.log(policy)
                    var p = policy[0];
                    for (var j = 1; j < policy.length; j ++) {
                        p  = p + " => " + policy[j]
                    }
                    tr.append("<td>" + p + "</td>")
                    table.append(tr)
                }
            })
            $("#PolicyPanel").append(table);
        }
        
        function displayJSON(canvas){
        var writer = new draw2d.io.json.Writer();
        writer.marshal(canvas, function(json){
            $("#json").html("<pre>"+JSON.stringify(json,null,2)+"<pre>");
        });
        }
        $(document).ready(function () {
            var canvas = document.getElementById('Canvas');
            var stage = new JTopo.Stage(canvas);
            var scene = new JTopo.Scene(stage);

            var s1 = new JTopo.Node("S1");
            var s2 = new JTopo.Node("S2");
            var s3 = new JTopo.Node("S3");
            var s4 = new JTopo.Node("S4");
            var s5 = new JTopo.Node("S5");
            var h1 = new JTopo.Node("H1");
            var h2 = new JTopo.Node("H2");

            s1.setImage('/images/switch.png', true);
            s2.setImage('/images/switch.png', true);
            s3.setImage('/images/switch.png', true);
            s4.setImage('/images/switch.png', true);
            s5.setImage('/images/switch.png', true);
            h1.setImage('/images/host.png', true);
            h2.setImage('/images/host.png', true);

            s1.font = "25px Consolas";
            s2.font = "25px Consolas";
            s3.font = "25px Consolas";
            s4.font = "25px Consolas";
            s5.font = "25px Consolas";
            h1.font = "25px Consolas";
            h2.font = "25px Consolas";

            s1.setLocation(200, 200);
            s2.setLocation(400, 200);
            s3.setLocation(550, 100);
            s4.setLocation(550, 300);
            s5.setLocation(700, 200);
            h2.setLocation(800, 200);
            h1.setLocation(100, 200);

            scene.add(s1);
            scene.add(s2);
            scene.add(s3);
            scene.add(s4);
            scene.add(s5);
            scene.add(h1);
            scene.add(h2);

            linkNode(s1, h1);
            linkNode(s1, s2);
            linkNode(s2, s3);
            linkNode(s2, s4);
            linkNode(s3, s4);
            linkNode(s3, s5);
            linkNode(s4, s5);
            linkNode(s5, h2);

            function linkNode(a, b) {
                var link = new JTopo.Link(a, b)
                link.lineWidth = 5;
                link.strokeColor = '0,200,200';
                scene.add(link)
                return link;
            }


        });